<?php
/**
 * 2007-2020 PrestaShop
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@prestashop.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade PrestaShop to newer
 * versions in the future. If you wish to customize PrestaShop for your
 * needs please refer to http://www.prestashop.com for more information.
 *
 *  @author    PrestaShop SA <contact@prestashop.com>
 *  @copyright 2007-2020 PrestaShop SA
 *  @license   http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 *  International Registered Trademark & Property of PrestaShop SA
 */

if (!defined('_PS_VERSION_')) {
    exit;
}

class Fozzy_promotions extends Module {

    function __construct()
    {
        $this->name = 'fozzy_promotions';
        $this->tab = 'administration';
        $this->version = '1.0.0';
        $this->author = 'Rudyk M.';
        $this->need_instance = 1;

        /**
         * Set $this->bootstrap to true if your module is compliant with bootstrap (PrestaShop 1.6)
         */
        $this->bootstrap = true;

        parent::__construct();

        $this->displayName = $this->l('Modul promotions');
        $this->description = $this->l('Promotions for Fozzy');

        $this->ps_versions_compliancy = array('min' => '1.7', 'max' => _PS_VERSION_);
    }

    /**
     * Установка модуля.
     * Module installation.
     * @return bool
     */
    public function install() {
        include dirname(__FILE__) . '/sql/install.php';
        $this->installTab();
        return parent::install() &&
            $this->registerHook('ActionGetDateOfDeliveryBlock'); // TODO: Change the autogenerated stub
    }

    /**
     * Добавление ссылки на модуль в главное меню.
     * Adding a link to the module to the main menu.
     * @return bool
     */
    public function installTab() {
        $id = Tab::getIdFromClassName('AdminCatalog');
        $tab = new Tab();
        $tab->class_name = 'AdminPromotions';
        $tab->name[(int) (Configuration::get('PS_LANG_DEFAULT'))] = $this->l('Modul promotions');
        $tab->id_parent = $id;
        $tab->module = $this->name;
        $tab->add();
        return true;
    }

    /**
     * Добавление Hook без переустановки модуля.
     * @return bool
     * @throws PrestaShopDatabaseException
     * @throws PrestaShopException
     */
    public function installHook()
    {
        $add_hook = new Hook();
        $add_hook->name = 'ActionGetDateOfDeliveryBlock';
        $add_hook->title = 'ActionGetDateOfDeliveryBlock';
        $add_hook->description = 'ActionGetDateOfDeliveryBlock';
        $add_hook->position = 1;
        $add_hook->live_edit = 0;
        $add_hook->add();
        $hookid = $add_hook->id;
        if (!$hookid) {
            return false;
        }
    }

    /**
     * Удаление модуля.
     * Removing a module.
     * @return bool
     */
    public function uninstall() {
        include dirname(__FILE__) . '/sql/uninstall.php';
        $idTabs = array();
        $idTabs[] = Tab::getIdFromClassName('AdminPromotions');
        foreach ($idTabs as $idTab) {
            if ($idTab) {
                $tab = new Tab($idTab);
                $tab->delete();
            }
        }
        return parent::uninstall(); // TODO: Change the autogenerated stub
    }


    /**
     * Основная функция модуля.
     * The main function of the module.
     * @return string
     */
    public function getContent() {
        //$this->installTab();
        //$this->uninstall();
    }

    /**
     * Получение данных и назначение бесплатной доставки при выборе даты и окна доставки при оформлении заказа.
     * Receiving data and assigning free delivery when choosing a date and delivery window when placing an order.
     * @param $cart_id
     * @param $date
     * @param $period
     * @throws PrestaShopDatabaseException
     * @throws PrestaShopException
     */
    public function getDateOfDeliveryBlock($cart_id = 0, $date = 0, $period = 0) {
        $promotions_rule = $this->checkPromotionsRule($date, $period);

        $cart = $this->context->cart;
        if (is_array($promotions_rule)) {
            $rule_name = array();
            $rule_name[1] = 'Бесплатная доставка от Henkel';
            $rule_name[2] = 'Безкоштовна доставка от Henkel';

            $cart_rule = new CartRule();
            $cart_rule->code = 'NVBNKTRNS_' . $cart_id;
            $cart_rule->name = $rule_name;
            $cart_rule->id_customer = $cart->id_customer;
            $cart_rule->free_shipping = true;
            $cart_rule->quantity = 1;
            $cart_rule->quantity_per_user = 1;
            $cart_rule->minimum_amount_currency = '1';
            $cart_rule->reduction_currency = '1';
            $cart_rule->date_from = date('Y-m-d H:i:s', time());
            $cart_rule->date_to = date('Y-m-d H:i:s', time() + 24 * 36000);
            $cart_rule->active = 1;
            $cart_rule->add();
            $cart->addCartRule($cart_rule->id);
        }
    }

    /**
     * Проверка есть ли правило на дату и окно доставки.
     * Check if there is a rule for the date and delivery window.
     * @param $date
     * @param $period
     * @return array|false|mysqli_result|PDOStatement|resource|null
     * @throws PrestaShopDatabaseException
     */
    public function checkPromotionsRule($date, $period) {
        $sql = "SELECT `ps_promotions_rule`.* FROM `ps_promotions_rule`";
        $sql .= " WHERE `date_to` <= '" . $date ."'";
        $sql .= " AND `delivery_block` = " . $period;
        $sql .= " AND `free_shipping` = 1";
        $sql .= " ORDER BY  `ps_promotions_rule`.`id_promotions_rule` ASC";
        $promotions_rule = Db::getInstance()->executeS($sql);

        return $promotions_rule;
    }
}